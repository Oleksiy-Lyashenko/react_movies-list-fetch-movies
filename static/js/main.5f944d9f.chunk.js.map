{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/server.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","url","fetch","then","res","ok","Error","status","statusText","json","FindMovie","loadFilm","errorTrue","errorFalse","hasLoadingError","useState","film","setFilm","searchFilm","setSearchFilm","haveFilm","setHaveFilm","loadMovie","a","some","item","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","undefined","Response","App","state","nameFilm","console","log","includes","setState","loadErrorTrue","loadErrorFalse","this","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f944d9f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=84fc5cf6&t=';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n};\n\nexport function getFilm(nameFilm: string): Promise<Movie[]> {\n  return request(nameFilm);\n}\n\nexport function getFilms(nameFilm: string): Promise<Movie> {\n  return request(nameFilm);\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { getFilms } from '../../api/server';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  loadFilm: (name: Movie) => void,\n  errorTrue: () => void,\n  errorFalse: () => void,\n  hasLoadingError: boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  loadFilm,\n  errorTrue,\n  errorFalse,\n  hasLoadingError,\n}) => {\n  const [film, setFilm] = useState('');\n  const [searchFilm, setSearchFilm] = useState<Movie | undefined>();\n  const [haveFilm, setHaveFilm] = useState('');\n\n  const loadMovie = async (url: string) => {\n    const movie: Movie = await getFilms(url);\n\n    if (movies.some(item => item.imdbID === movie.imdbID)) {\n      return setHaveFilm('have');\n    }\n\n    if (!movie.Error) {\n      setSearchFilm({ ...movie });\n      setFilm('');\n      setHaveFilm('');\n\n      return errorFalse();\n    }\n\n    setHaveFilm('');\n\n    return errorTrue();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={film}\n              onChange={(event) => {\n                setFilm(event.target.value);\n              }}\n            />\n          </div>\n          {hasLoadingError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                setSearchFilm(undefined);\n                loadMovie(film);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (searchFilm) {\n                  loadFilm(searchFilm);\n                  setSearchFilm(undefined);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {searchFilm?.Response && (\n          <MovieCard movie={searchFilm} />\n        )}\n        {haveFilm && (\n          <div className=\"error\">\n            This film has in our list\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n  hasLoadingError: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n    hasLoadingError: false,\n  };\n\n  loadFilm = (nameFilm: Movie) => {\n    console.log(this.state.movies);\n    console.log(nameFilm);\n\n    if (this.state.movies.includes(nameFilm)) {\n      return 0;\n    }\n\n    return this.setState((state: State) => ({\n      movies: [...state.movies, nameFilm],\n    }));\n  };\n\n  loadErrorTrue = () => {\n    this.setState((state: State) => ({\n      ...state,\n      hasLoadingError: true,\n    }));\n  };\n\n  loadErrorFalse = () => {\n    this.setState((state: State) => ({\n      ...state,\n      hasLoadingError: false,\n    }));\n  };\n\n  render() {\n    const { movies, hasLoadingError } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          {movies.length > 0 ? (\n            <MoviesList movies={movies} />\n          ) : (\n            <>\n            </>\n          )}\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            movies={movies}\n            loadFilm={this.loadFilm}\n            errorTrue={this.loadErrorTrue}\n            errorFalse={this.loadErrorFalse}\n            hasLoadingError={hasLoadingError}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}